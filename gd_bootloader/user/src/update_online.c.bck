/********************************************************************************
*工 程 名:屏下指纹项目
*工程功能:配置项目各模块底层驱动
*时    间:2018.12.4
*版    本:v0.1
********************************************************************************/
#include "gd32f4xx_misc.h"
#include "gd32f4xx_dma.h"
#include <stdio.h>
#include "common.h"
#include "flash.h"
#include "spi.h"
extern uint8_t spi_send_done;
#define ApplicationAddress 0x8000000
typedef  void (*pFunction)(void);
pFunction Jump_To_Application;
uint32_t JumpAddress;

int update_fw(void) 
{
    uint16_t camera_cfg_for_flash[9];
	int i ,ret=0;
    //nvic_vector_table_set(0x8000000,0);
	uint8_t *VectorsTable=(uint8_t *)0x20000000;
   // FingerTech_BspInit();
    printf("\r\n##########################################################\r\n");
    printf("\r\n----------------Test Run code in 0x8000000 ---------------\r\n");
    printf("\r\n--------------------- Run in Boot ------------------------\r\n");
    printf("\r\n##########################################################\r\n");
    /* Download */

    /* Test if user code is programmed starting from address "ApplicationAddress" */
    //if (((*(__IO uint32_t*)ApplicationAddress) & 0x2FFE0000 ) == 0x20000000)
    //fmc_read_16bit_data(FLASH_USER_START_ADDR, 9, camera_cfg_for_flash);
   // if(camera_cfg_for_flash[8] == 0xaa)
    { 
        printf("update_program!\n");
        //camera_cfg_for_flash[8] = 0x00;
			
       //fmc_erase_sector(CTL_SECTOR_NUMBER_0);
        //ob_write_protection0_disable(OB_WP_0);
			for(i = 0;i < 16;i++)
				fmc_read_8bit_data(0x8000000+i*255, 255,VectorsTable+i*255);
			
			nvic_vector_table_set((uint32_t)VectorsTable,0);
        //cdfinger_irqpin_init();
        //spi_gpio_config();
        //spi_config();
        ///////////////////
//        dma_tx_config(32,slaveRxData);
//        dma_rx_config(32,slaveRxData,DMA_MEMORY_INCREASE_ENABLE);
//        printf("waiting for spi send cmd done!\n");
//        while(slaveRxData[0] != 0x97){
//            delay_1ms(1);
//        }
//        gpio_bit_reset(GPIOA,GPIO_PIN_0);
        ///////////////////
				spi_config();
        dma_tx_config(18000,(uint8_t*)&picture_data[2][0]);
        dma_rx_config(18000,slaveRxData,DMA_MEMORY_INCREASE_ENABLE);
        gpio_bit_set(GPIOC,GPIO_PIN_3);
        //printf("waiting for spi send data done!\n");
        while(spi_send_done == 0){
            delay_1ms(1);
        }
        gpio_bit_reset(GPIOC,GPIO_PIN_3);	
				delay_1ms(100);
        fmc_erase_sector(CTL_SECTOR_NUMBER_0);
        ob_write_protection0_disable(OB_WP_0);
        //printf("flash ready to write!\n");
        fmc_write_8bit_data(ADDR_FMC_SECTOR_0, 0x4000, slaveRxData);
				
        fmc_erase_sector(CTL_SECTOR_NUMBER_1);
        ob_write_protection0_disable(OB_WP_1);
        fmc_write_8bit_data(ADDR_FMC_SECTOR_1, 18000-0x4000, slaveRxData+0x4000);
		//printf("flash write done!\n");
    }
		spi_send_done = 0;
    printf("from bootloader go to app!\n");
    /* Jump to user application */
   JumpAddress = *(__IO uint32_t*) (ApplicationAddress + 4);
    Jump_To_Application = (pFunction) JumpAddress;
//    /* Initialize user application's Stack Pointer */
    __set_MSP(*(__IO uint32_t*) ApplicationAddress);
		nvic_vector_table_set((uint32_t)ApplicationAddress,0);
    Jump_To_Application();
//  
    while(1);
}
